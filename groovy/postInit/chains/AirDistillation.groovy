import static globals.Globals.*

CONTACT_COOLER = recipemap('contact_cooler')
SIFTER = recipemap('sifter')
VACUUM_CHAMBER = recipemap('vacuum_chamber')
FLUID_COMPRESSOR = recipemap('fluid_compressor')
FLUID_DECOMPRESSOR = recipemap('fluid_decompressor')
HEAT_EXCHANGER = recipemap('heat_exchanger')
PHASE_SEPARATOR = recipemap('phase_separator')
LOW_PRESSURE_DISTILLATION_TOWER = recipemap('low_pressure_distillation_tower')
HIGH_PRESSURE_DISTILLATION_TOWER = recipemap('high_pressure_distillation_tower')
VENT = recipemap('smoke_stack')

FLUID_COMPRESSOR.recipeBuilder()
    .fluidInputs(fluid('earth_like_air') * 6000)
    .fluidOutputs(fluid('compressed_air') * 1000)
    .duration(31)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder() //move to cooling tower
    .fluidInputs(fluid('purified_waste_gaseous_nitrogen') * 640)
    .fluidInputs(fluid('water') * 1280)
    .fluidOutputs(fluid('nitrogen') * 640)
    .fluidOutputs(fluid('cold_water') * 1280)
    .duration(31)
    .buildAndRegister()

CONTACT_COOLER.recipeBuilder()
    .fluidInputs(fluid('compressed_air') * 1000)
    .fluidInputs(fluid('cold_water') * 640)
    .fluidOutputs(fluid('chilled_air') * 1000)
    .fluidOutputs(fluid('water') * 640)
    .duration(31)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

SIFTER.recipeBuilder()
    .inputs(metaitem('dustSmallMolecularSieve'))
    .fluidInputs(fluid('chilled_air') * 25000)
    .fluidOutputs(fluid('purified_air') * 25000)
    .outputs(metaitem('dustSmallDirtyMolecularSieve'))
    .duration(775)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

VACUUM_CHAMBER.recipeBuilder()
    .inputs(metaitem('dustSmallDirtyMolecularSieve'))
    .notConsumable(item('gregtech:wire_coil', 2))
    .outputs(metaitem('dustSmallMolecularSieve'))
    .fluidOutputs(fluid('carbon_dioxide') * 25)
    .duration(100)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

FLUID_COMPRESSOR.recipeBuilder()
    .fluidInputs(fluid('purified_air') * 1000)
    .fluidOutputs(fluid('boosted_air') * 300)
    .duration(114)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
    .fluidInputs(fluid('boosted_air') * 300)
    .fluidInputs(fluid('purified_air') * 500)
    .fluidOutputs(fluid('chilled_boosted_air') * 150)
    .fluidOutputs(fluid('partially_liquefied_air') * 150)
    .fluidOutputs(fluid('gaseous_air_feedstock') * 500)
    .duration(114)
    .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
    .fluidInputs(fluid('purified_air') * 500)
    .fluidInputs(fluid('untreated_liquid_oxygen') * 15)
    .fluidOutputs(fluid('gaseous_air_feedstock') * 500)
    .fluidOutputs(fluid('oxygen') * 720)
    .duration(114)
    .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
    .fluidInputs(fluid('untreated_liquid_oxygen') * 10)
    .fluidInputs(fluid('chilly_waste_gaseous_nitrogen') * 320)
    .fluidOutputs(fluid('oxygen') * 480)
    .fluidOutputs(fluid('waste_gaseous_nitrogen') * 320)
    .duration(114)
    .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
    .fluidInputs(fluid('chilly_waste_gaseous_nitrogen') * 320)
    .fluidInputs(fluid('untreated_liquid_nitrogen') * 25)
    .fluidOutputs(fluid('waste_gaseous_nitrogen') * 320)
    .fluidOutputs(fluid('nitrogen') * 1200L)
    .duration(114)
    .buildAndRegister()

FLUID_DECOMPRESSOR.recipeBuilder()
    .fluidInputs(fluid('chilled_boosted_air') * 150)
    .fluidOutputs(fluid('gaseous_air_feedstock') * 500)
    .duration(114)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()

PHASE_SEPARATOR.recipeBuilder()
    .fluidInputs(fluid('partially_liquified_air') * 150)
    .fluidOutputs(fluid('liquid_air_feedstock') * 50)
    .fluidOutputs(fluid('gaseous_air_feedstock') * 100)
    .duration(114)
    .buildAndRegister()