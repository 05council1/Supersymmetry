import static globals.Globals.*

BATCH_REACTOR = recipemap('batch_reactor')
DISTILLERY = recipemap('distillery')
AUTOCLAVE = recipemap('autoclave')
ROASTER = recipemap('roaster')
MIXER = recipemap('mixer')
EBF = recipemap('electric_blast_furnace')
FLUID_SOLIDIFIER = recipemap('fluid_solidifier')
CONDENSER = recipemap('condenser')
ZONE_REFINER = recipemap('zone_refiner')
COMPRESSOR = recipemap('compressor')

//PRIMITIVE (LV)
AUTOCLAVE.recipeBuilder()
    .inputs(ore('dustBone'))
    .fluidInputs(fluid('water') * 250)
    .outputs(metaitem('dustTricalciumPhosphate') * 13)
    .outputs(metaitem('fat_ingot'))
    .duration(120)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustTricalciumPhosphate') * 13)
    .fluidInputs(fluid('sulfuric_acid') * 2000)
    .outputs(metaitem('dustMonocalciumPhosphate') * 15)
    .fluidOutputs(fluid('water') * 2000)
    .duration(120)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustMonocalciumPhosphate') * 15)
    .outputs(metaitem('dustCalciumPhosphite') * 11)
    .fluidOutputs(fluid('steam') * 2000)
    .duration(120)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustCalciumPhosphite') * 33)
    .inputs(ore('dustCarbon') * 10)
    .outputs(metaitem('dustTricalciumPhosphate') * 13)
    .outputs(metaitem('dustPhosphorus') * 4)
    .duration(360)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//UNIVERSAL (MV)
//REMOVE APATITE RECIPES
mods.gregtech.mixer.removeByInput(8, [item('minecraft:clay_ball'), metaitem('dustStone'), metaitem('dustApatite') * 2], null)
mods.gregtech.batch_reactor.removeByInput(30, [metaitem('dustApatite') * 21], [fluid('sulfuric_acid') * 5000])

def apatites = [
        metaitem('dustChlorapatite'),
        metaitem('dustHydroxyapatite'),
        metaitem('dustFluorapatite'),
];

for (apatite in apatites) {
    MIXER.recipeBuilder()
        .inputs(apatite * 2)
        .inputs(item('minecraft:clay_ball'))
        .inputs(metaitem('dustStone'))
        .outputs(metaitem('bone_china_clay_dust') * 4)
        .duration(40)
        .EUt(8)
        .buildAndRegister()
}

//WET PROCESS
BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustHydroxyapatite') * 22)
    .fluidInputs(fluid('sulfuric_acid') * 5000)
    .outputs(metaitem('dustCalciumSulfate') * 6)
    .fluidOutputs(fluid('diluted_phosphoric_acid') * 1000)
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustFluorapatite') * 21)
    .fluidInputs(fluid('sulfuric_acid') * 5000)
    .outputs(metaitem('dustCalciumSulfate') * 6)
    .fluidOutputs(fluid('phosphoric_acid') * 3000)
    .fluidOutputs(fluid('hydrogen_fluoride') * 1000)
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustChlorapatite') * 21)
    .fluidInputs(fluid('sulfuric_acid') * 5000)
    .outputs(metaitem('dustCalciumSulfate') * 6)
    .fluidOutputs(fluid('phosphoric_acid') * 3000)
    .fluidOutputs(fluid('hydrogen_chloride') * 1000)
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('diluted_phosphoric_acid') * 1000)
    .fluidOutputs(fluid('phosphoric_acid') * 3000)
    .duration(200)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

//SULFURIC ACID REGENERATION
ROASTER.recipeBuilder()
    .inputs(ore('dustCalciumSulfate') * 6)
    .inputs(ore('dustSiliconDioxide') * 3)
    .outputs(metaitem('dustCalciumMetasilicate') * 5)
    .fluidOutputs(fluid('sulfur_trioxide_reaction_mixture') * 2000)
    .duration(200)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .fluidInputs(fluid('sulfur_trioxide_reaction_mixture') * 1000)
    .notConsumable(ore('dustVanadiumPentoxide'))
    .fluidOutputs(fluid('sulfur_trioxide') * 1000)
    .duration(200)
    .EUt(7)
    .buildAndRegister()

//THERMAL PROCESS
EBF.recipeBuilder()
    .inputs(ore('dustFluorapatite') * 42)
    .inputs(ore('dustSiliconDioxide') * 27)
    .inputs(ore('dustCarbon') * 15)
    .outputs(ore('dustPhosphorus') * 6)
    .outputs(ore('dustCalciumMetasilicate') * 45)
    .outputs(ore('dustFluorite') * 3)
    .fluidOutputs(fluid('carbon_monoxide') * 15000)
    .fluidOutputs(ore)
    .property("temperature", 1200)
    .duration(720)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

EBF.recipeBuilder()
    .inputs(ore('dustChlorapatite') * 42)
    .inputs(ore('dustSiliconDioxide') * 27)
    .inputs(ore('dustCarbon') * 15)
    .outputs(ore('dustPhosphorus') * 6)
    .outputs(ore('dustCalciumMetasilicate') * 45)
    .outputs(ore('dustCalciumChloride') * 3)
    .fluidOutputs(fluid('carbon_monoxide') * 15000)
    .property("temperature", 1200)
    .duration(720)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

EBF.recipeBuilder()
    .inputs(ore('dustFluorapatite') * 44)
    .inputs(ore('dustSiliconDioxide') * 27)
    .inputs(ore('dustCarbon') * 15)
    .outputs(ore('dustPhosphorus') * 6)
    .outputs(ore('dustCalciumMetasilicate') * 45)
    .outputs(ore('dustCalciumHydroxide') * 5)
    .property("temperature", 1200)
    .duration(720)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//SPECIALIZED (HV) (FOR PHOSPHORITE, DEPENDENCY ON FROTH FLOTATION, WILL NOT IMPLEMENT YET)

//HIGH PURITY
COMPRESSOR.recipeBuilder()
    .inputs(ore('dustPhosphorus'))
    .outputs(metaitem('ingotPhosphorus'))
    .duration(200)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

ZONE_REFINER.recipeBuilder()
    .inputs(ore('ingotPhosphorus'))
    .outputs(metaitem('ingotHighPurityPhosphorus'))
    .duration(400)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

AUTOCLAVE.recipeBuilder()
    .inputs(ore('dustPhosphorus'))
    .fluidInputs(fluid('water') * 250)
    .chancedOutput(metaitem('dustArsenic'), 500, 50)
    .fluidOutputs(fluid('high_purity_phosphorus_vapor_mixture') * 250)
    .duration(60)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('high_purity_phosphorus_vapor_mixture') * 1000)
    .fluidOutputs(fluid('high_purity_phosphorus') * 576)
    .duration(240)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

FLUID_SOLIDIFIER.recipeBuilder()
    .fluidInputs(fluid('high_purity_phosphorus') * 144)
    .outputs(metaitem('dustHighPurityPhosphorus'))
    .duration(60)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

//CALCIUM METASILICATE-SILICA RECYCLING
BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustCalciumMetasilicate') * 5)
    .fluidInputs(fluid('carbon_dioxide'))
    .outputs(metaitem('dustCalcite') * 5)
    .outputs(metaitem('dustSiliconDioxide'))
    .duration(120)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()


