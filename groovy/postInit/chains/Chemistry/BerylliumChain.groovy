import static globals.Globals.*
import static globals.SinteringGlobals.*

BR = recipemap('batch_reactor')
ROASTER = recipemap('roaster')
CENTRIFUGE = recipemap('centrifuge')
ELECTROLYZER = recipemap('electrolyzer')
REACTION_FURNACE = recipemap('reaction_furnace')

BR.recipeBuilder()
        .fluidInputs(fluid('hexafluorosilicic_acid') * 1000)
        .fluidInputs(fluid('salt_water') * 2000)
        .outputs(metaitem('dustSodiumFluorosilicate') * 9)
        .fluidOutputs(fluid('hydrochloric_acid') * 2000)
        .EUt(120)
        .duration(200)
        .buildAndRegister()

REACTION_FURNACE.recipeBuilder()
        .inputs(metaitem('dustEmerald') * 29)
        .inputs(metaitem('dustSodiumFluorosilicate') * 18)
        .inputs(metaitem('dustSodaAsh') * 6)
        .outputs(metaitem('dustFusedBeryl') * 50)
        .fluidOutputs(fluid('carbon_dioxide') * 1000)
        .EUt(120)
        .duration(300)
        .buildAndRegister()

CENTRIFUGE.recipeBuilder()
        .inputs(metaitem('dustFusedBeryl') * 50)
        .fluidInputs(fluid('sodium_hydroxide_solution') * 6000)
        .outputs(metaitem('dustBerylliumHydroxide') * 15)
        .outputs(metaitem('dustAluminiumSilicate') * 8)
        .fluidOutputs(fluid('sodium_fluoride_solution') * 6000)
        .EUt(120)
        .duration(300)
        .buildAndRegister()

ROASTER.recipeBuilder()
        .inputs(metaitem('dustBerylliumHydroxide') * 5)
        .outputs(metaitem('dustBerylliumOxide') * 2)
        .fluidOutputs(fluid('steam') * 1000)
        .EUt(120)
        .duration(80)
        .buildAndRegister()

ROASTER.recipeBuilder()
        .inputs(metaitem('dustBerylliumOxide') * 2)
        .inputs(metaitem('dustCarbon') * 1)
        .fluidInputs(fluid('chlorine') * 2000)
        .outputs(metaitem('dustBerylliumChloride') * 3)
        .fluidOutputs(fluid('carbon_monoxide') * 1000)
        .EUt(120)
        .duration(80)
        .buildAndRegister()

ELECTROLYZER.recipeBuilder()
        .notConsumable(metaitem('graphite_electrode'))
        .notConsumable(metaitem('stickIron'))
        .fluidInputs(fluid('beryllium_chloride') * 432)
        .fluidOutputs(fluid('chlorine') * 2000)
        .outputs(metaitem('dustBeryllium'))
        .EUt(120)
        .duration(160)
        .buildAndRegister()